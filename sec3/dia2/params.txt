Utilizando par√¢metros

Utilizando o par√¢metro {id}
 [HttpGet]
 public IActionResult Get()
 {
    return Ok();
 }

 [HttpGet("{id}")]
 public IActionResult GetById(int id)
 {  
    if()
    {
        return NotFound();
    }    
    return Ok();
 }

 --------------------------------------------

 Uso de m√∫ltiplas [Route] em uma mesma Action


Vimos, ao longo desta li√ß√£o, como usar as annotations de forma separada, um verbo para um m√©todo.

Agora vamos um pouco mais al√©m e mostrar como podemos juntar duas rotas dentro de um mesmo m√©todo.

Quando a assinatura e regras de neg√≥cio do m√©todo forem iguais, voc√™ pode junt√°-los em m√∫ltiplas [Route].

---------------------------------------------------------------------

Restri√ß√£o de tipos e valores em par√¢metros de a√ß√µes


[Route("Default/GetRecorsById/{id:int:min(1)}")]

public ActionResult GetRecorsById(int id)
{
    string str = string.Format("id passed as parameter: {0}",id);
    return Ok(str);
}

No exemplo acima, restringirmos para que apenas n√∫meros inteiros possam ser roteados no m√©todo GET,
 e se algu√©m passar, por exemplo, um comando/GetRecordsById/arroz, automaticamente o ASP.NET retornar√° um erro.

OBS:
E se algu√©m passar um /GetRecordsById/0? ü§î

Resposta: Nesse nosso exemplo, tamb√©m retorna um erro, pois, apesar de 0 ser n√∫mero inteiro,
 estipulamos que o menor inteiro poss√≠vel fosse o n√∫mero 1.

---------------------------------------------
constraints
{id:alpha}: Restringe o par√¢metro para conter apenas letras

{id:bool}: Restringe o par√¢metro para representar valores booleanos

{id:datetime}: Restringe para usar valores de Data e Hora

{id:Guid}: Restringe para usar apenas Guids
