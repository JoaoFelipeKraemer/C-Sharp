DATAS

Trabalhar com datas e hor√°rios em qualquer linguagem de programa√ß√£o sempre √© um
 desafio quando √© preciso lembrar as bibliotecas, m√©todos e formatos para isso, n√©! üòü

No mundo .NET com C# temos uma forma bem mais clara de tratar 
os momentos de tempo com a biblioteca DateTime.

Momentos de tempo:
 s√£o um conjunto muito √∫til de informa√ß√µes sobre um ponto no tempo, e nele temos os seguintes campos:

Data, composta por:
Dia
M√™s
Ano
Hor√°rio, composto por:
Horas
Minutos
Segundos
Milissegundos
Fuso Hor√°rio
----------------------------------------
A biblioteca DateTime:

public class DataUtil
{
    public static void Main(string[] args)
    {
        var date = new DateTime(2022, 10, 2, 8, 35, 0);
        Console.WriteLine(date.ToString());
    }
}

 ano, dia, m√™s, hora, minuto e segundo definidos respectivamente
usamos o ToString() para imprimir essa data.

02/10/2022 08:35:00
-----------------------------------
Principais propriedades da DateTime

*DateTime.Now

Essa propriedade obt√©m e retorna uma inst√¢ncia da classe DateTime com os 
campos configurados para o momento de tempo exato em que a propriedade foi chamada, 
e expressa como a hora local.

  public class DataUtil
  {
      public static void Main(string[] args)
      {
          var dataType = DateTime.Now;
          Console.WriteLine(dataType.GetType());
      }
  }

  TIPO de dataType √©   System.DateTime

    public class DataUtil
  {
      public string getTimeNow()
      {
          return "O momento de tempo atual √© " +DateTime.Now;
      }
  }   
.Today parecido com Now mas  retrata as Horas como 00:00:00


*DateTime.Date

Essa propriedade acessa o componente da data em uma inst√¢ncia da DateTime
 que representa um momento de tempo e retorna uma nova inst√¢ncia de DateTime.

  public class DataUtil
  {
      public static void Main(string[] args)
      {
          var date = new DateTime(2022, 10, 2, 8, 35, 0);
          var dateOnly = date.Date;
          Console.WriteLine(dateOnly.ToString());
      }
  }

  02/10/2022

*DateTime.Day

Essa propriedade acessa o componente do dia em uma inst√¢ncia da DateTime que
 representa um momento de tempo e retorna um valor inteiro entre 1 e 31.

  public class DataUtil
  {
      public static void Main(string[] args)
      {
          var date = new DateTime(2022, 10, 2, 8, 35, 0);
          var dayOnly = date.Day;
          Console.WriteLine(dayOnly.ToString());
      }
  }

  2

* DateTime.Month

Essa propriedade acessa o componente do m√™s em uma inst√¢ncia da DateTime que representa
 um momento de tempo e retorna um valor inteiro entre 1 e 12.

  public class DataUtil
  {
      public static void Main(string[] args)
      {
          var date = new DateTime(2022, 10, 2, 8, 35, 0);
          var monthOnly = date.Month;
          Console.WriteLine(monthOnly.ToString());
      }
  }
  10

*DateTime.Year

Essa propriedade acessa o componente do ano em uma inst√¢ncia da DateTime que 
representa um momento de tempo e retorna um valor inteiro entre 1 e 99999.

  public class DataUtil
  {
      public static void Main(string[] args)
      {
          var date = new DateTime(2022, 10, 2, 8, 35, 0);
          var yearOnly = date.Year;
          Console.WriteLine(yearOnly.ToString());
      }
  }

2022

De forma similar, temos as propriedades .Hour, .Minute, .Second, .Millisecond e .DayOfWeek

data = day/month/year hour/minute/seconds
